// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in[0..15]=loopout, out[0..15]=incout);

    // reset >> load >> inc
    Mux(a=false, b=true, sel=inc, out=incsel0);
    Mux(a=false, b=true, sel=inc, out=incsel1);
    Mux(a=incsel0, b=false, sel=load, out=loadsel0);
    Mux(a=incsel1, b=true, sel=load, out=loadsel1);
    Mux(a=loadsel0, b=true, sel=reset, out=resetsel0);
    Mux(a=loadsel1, b=false, sel=reset, out=resetsel1);
    
    // 00 = otherwise
    // 01 = reset
    // 10 = load
    // 11 = inc 
    Mux4Way16(a[0..15]=loopout, b[0..15]=false, c[0..15]=in[0..15], d[0..15]=incout, sel[0]=resetsel0, sel[1]=resetsel1, out[0..15]=mux4out);
    Register(in[0..15]=mux4out, load=true, out[0..15]=out[0..15], out[0..15]=loopout);
}
